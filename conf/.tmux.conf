# make C-a a prefix as well
# unbind C-b
#set-option -g prefix C-a
#bind-key C-a send-prefix
bind r source-file ~/.tmux.conf # reload .tmux.conf
#bind P paste-buffer
# switch windows with Shift+Arrow <- or ->
bind-key -n S-Left previous-window
bind-key -n S-Right next-window
bind-key -n S-Up set-option -g status #toggle tmux status with Shft+arrow-up
bind S setw synchronize-panes # Toggle synchronizing panes

# split windows as the shortcut as vim
bind-key v split-window -h
bind-key s split-window -v

# switch panes using Alt+arrow or hjkl
bind -n M-h select-pane -L
bind -n M-j select-pane -D
bind -n M-k select-pane -U
bind -n M-l select-pane -R
bind -n M-Left select-pane -L
bind -n M-Right select-pane -R
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D

set -sg escape-time 0 # make switching vim modes instantaneous http://superuser.com/a/252717/65504
set -g history-limit 50000 # larger history
set -g base-index 1 # start numbering windows and panes from 1
setw -g pane-base-index 1
set -g mouse on # enable mouse to select window, pane, and resize
set -g set-clipboard on
set-option -g allow-rename off # dont rename windows automatically
set-window-option -g mode-keys vi # vi mode when searching


# to install plugins, do <prefix> + I
# to refresh plugins, do <prefix> + U
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-yank'
# prefix-y  copy text from the command line to the clipboard
# prefix-Y  copy the panes current working dir to clipboard
# prefix-[ (or mouse select) + y  copy the selection to the clipboard
# prefix-[ (or mouse select) + Y  copy the selection and paste right away

run '~/.tmux/plugins/tpm/tpm'

#install tpm if not present
if "test ! -d ~/.tmux/plugins/tpm" \
   "run ' mkdir -p ~/.tmux/plugins && git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && ~/.tmux/plugins/tpm/bin/install_plugins'"

#taken from https://www.hamvocke.com/blog/a-guide-to-customizing-your-tmux-conf/
######################
### DESIGN CHANGES ###
######################

# panes

## Status bar design
# status line
set -g status-justify left
set -g status-interval 2

# messaging
set -g message-command-style fg=blue,bg=black

#window mode

# window status
setw -g window-status-format " #F#I:#W#F "
setw -g window-status-current-format " #F#I:#W#F "
setw -g window-status-format "#[fg=magenta]#[bg=black] #I #[bg=cyan]#[fg=colour8] #W "
setw -g window-status-current-format "#[bg=brightmagenta]#[fg=colour8] #I #[fg=colour8]#[bg=colour14] #W "

# Info on left (I don't have a session display for now)
set -g status-left ''

# loud or quiet?
set-option -g visual-activity off
set-option -g visual-bell off
set-option -g visual-silence off
set-window-option -g monitor-activity off
set-option -g bell-action none

set -g default-terminal "xterm-256color"

# The modes {
setw -g clock-mode-colour colour135
setw -g mode-style bg=colour6,fg=colour0,bold,fg=colour196,bg=colour238

# }
# The panes {

set -g pane-border-style fg=black,bg=colour235,fg=colour238
set -g pane-active-border-style fg=brightred,bg=colour236,fg=colour51

# }
# The statusbar {

set -g status-position bottom
set -g status-style bg=default,fg=colour12,bg=colour234,fg=colour137,dim
set -g status-left ''
set -g status-right '#[fg=colour233,bg=colour241,bold]#H %d/%m #[fg=colour233,bg=colour245,bold] %H:%M:%S '
set -g status-right-length 50
set -g status-left-length 20

setw -g window-status-current-style bg=colour0,fg=colour11,dim,fg=colour81,bg=colour238,bold
setw -g window-status-current-format ' #I#[fg=colour250]:#[fg=colour255]#W#[fg=colour50]#F '

setw -g window-status-style bg=green,fg=black,reverse,fg=colour138,bg=colour235,none
setw -g window-status-format ' #I#[fg=colour237]:#[fg=colour250]#W#[fg=colour244]#F '

setw -g window-status-bell-style bold,fg=colour255,bg=colour1

# }
# The messages {

set -g message-style fg=black,bg=yellow,bold,fg=colour232,bg=colour166

# }

# Emulate scrolling by sending up and down keys if these commands are running in the pane
tmux_commands_with_legacy_scroll="nano less more man git"

bind-key -T root WheelUpPane \
    if-shell -Ft= '#{?mouse_any_flag,1,#{pane_in_mode}}' \
        'send -Mt=' \
        'if-shell -t= "#{?alternate_on,true,false} || echo \"#{tmux_commands_with_legacy_scroll}\" | grep -q \"#{pane_current_command}\"" \
            "send -t= Up" "copy-mode -et="'

bind-key -T root WheelDownPane \
    if-shell -Ft = '#{?pane_in_mode,1,#{mouse_any_flag}}' \
        'send -Mt=' \
        'if-shell -t= "#{?alternate_on,true,false} || echo \"#{tmux_commands_with_legacy_scroll}\" | grep -q \"#{pane_current_command}\"" \
            "send -t= Down" "send -Mt="'
